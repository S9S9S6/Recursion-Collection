"""
Basic Recursion Solutions
Author: S9S9S6
Description: This file contains solutions to basic recursion problems.
"""

# 1. Sum of Natural Numbers
def sum_of_natural_numbers(n):
    if n == 1:
        return 1
    else:
        return n + sum_of_natural_numbers(n - 1)


# 2. Factorial
def factorial(n):
    if n == 1 or n == 0:
        return 1
    else:
        return n * factorial(n - 1)


# 3. Print Numbers from 1 to n
def print_numbers(n):
    if n == 1:
        print(1)
    else:
        print_numbers(n - 1)
        print(n)


# 4. Reverse a String
def reverse_string(s):
    if len(s) == 0 or len(s) == 1:
        return s
    else:
        return s[-1] + reverse_string(s[:-1])


# 5. Countdown (n to 1)
def countdown(n):
    if n == 0:
        return
    else:
        print(n)
        countdown(n - 1)


# 6. Sum of Digits
def sum_of_digits(n):
    if n == 0:
        return 0
    else:
        last_digit = n % 10
        rest_of_digits = n // 10
        return last_digit + sum_of_digits(rest_of_digits)


# 7. Palindrome Check
def is_palindrome(n):
    if len(n) <= 1:
        return True
    elif n[0] == n[-1]:
        return is_palindrome(n[1:-1])
    else:
        return False


# 8. Find Minimum in List
def find_minimum(lst):
    if len(lst) == 1:
        return lst[0]
    else:
        min_of_rest = find_minimum(lst[1:])
        return lst[0] if lst[0] < min_of_rest else min_of_rest


# 9. Find Maximum in List
def find_maximum(lst):
    if len(lst) == 1:
        return lst[0]
    else:
        max_of_rest = find_maximum(lst[1:])
        return lst[0] if lst[0] > max_of_rest else max_of_rest


# 10. Power of a Number
def power(x, y):
    if y == 0:
        return 1
    else:
        return x * power(x, y - 1)


# ----------------------------------
# Test Area (only runs when executed directly)
# ----------------------------------

if __name__ == "__main__":
    print("\n--- 1. Sum of Natural Numbers ---")
    n = int(input("Type a number: "))
    print("Sum:", sum_of_natural_numbers(n))

    print("\n--- 2. Factorial ---")
    n = int(input("Type a number: "))
    print("Factorial:", factorial(n))

    print("\n--- 3. Print Numbers from 1 to n ---")
    n = int(input("Type a number: "))
    print_numbers(n)

    print("\n--- 4. Reverse a String ---")
    s = input("Type a string: ")
    print("Reversed:", reverse_string(s))

    print("\n--- 5. Countdown (n to 1) ---")
    n = int(input("Type a number: "))
    print("Countdown:")
    countdown(n)

    print("\n--- 6. Sum of Digits ---")
    n = int(input("Type a number: "))
    print("Sum of digits:", sum_of_digits(n))

    print("\n--- 7. Palindrome Check ---")
    text = input("Type a word or sentence: ").lower()
    if is_palindrome(text):
        print("Yes, it's a palindrome!")
    else:
        print("Nope, not a palindrome.")

    print("\n--- 8. Find Minimum in List ---")
    numbers = input("Type numbers separated by spaces: ").split()
    numbers = [int(num) for num in numbers]
    print("Minimum number is:", find_minimum(numbers))

    print("\n--- 9. Find Maximum in List ---")
    numbers = input("Type numbers separated by spaces: ").split()
    numbers = [int(num) for num in numbers]
    print("Maximum number is:", find_maximum(numbers))

    print("\n--- 10. Power of a Number ---")
    x = int(input("Enter the base (x): "))
    y = int(input("Enter the exponent (y): "))
    print(f"{x} raised to the power {y} is:", power(x, y))



        